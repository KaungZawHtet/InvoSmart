# This workflow will build and push a .NET Core app to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-dotnetcore?tabs=net60&pivots=development-environment-vscode
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and DOTNET_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Deploy Backend to Azure App Service (OIDC)

on:
    push:
        branches: [main]
        paths:
            - 'backend/**'
            - '.github/workflows/deploy-api.yml'

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        permissions:
            id-token: write # OIDC
            contents: read

        env:
            PROJECT: backend/InvoSmart.Api/InvoSmart.Api.csproj
            PUBLISH_DIR: backend/publish
            AZURE_WEBAPP_NAME: InvoSmart # <-- your web app name

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup .NET 8
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: '8.0.x'

            - name: Restore
              run: dotnet restore $PROJECT

            - name: Build
              run: dotnet build $PROJECT -c Release --no-restore

            - name: Test
              run: |
                  if [ -f "backend/InvoSmart.Tests/InvoSmart.Tests.csproj" ]; then
                    dotnet test backend/InvoSmart.Tests/InvoSmart.Tests.csproj -c Release --no-build
                  else
                    echo "No tests project. Skipping."
                  fi

            - name: Publish
              run: dotnet publish $PROJECT -c Release -o $PUBLISH_DIR /p:UseAppHost=false

            # Login to Azure using OIDC (no secrets!)
            - name: Azure Login (OIDC)
              uses: azure/login@v2
              with:
                  client-id: ${{ secrets.AZURE_CLIENT_ID }}
                  tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                  subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

            # Deploy published output to Web App (zip deploy)
            - name: Deploy to Azure Web App
              uses: azure/webapps-deploy@v3
              with:
                  app-name: ${{ env.AZURE_WEBAPP_NAME }}
                  package: ${{ env.PUBLISH_DIR }}
